/*
- 알파벳 소문자(a-z)는 0부터 25까지로 표현한다.
- 알파벳 대문자(A-Z)는 26부터 51까지로 표현한다.
- 숫자(0-9)는 52부터 61까지로 표현한다.
- 공백은 62로 표현한다.

규칙1 : 인코딩시 비트의 개수가 8로 나누어 떨어지지 않는다면 나누어 떨어질때까지 0으로 채운다.
규칙2 : 16진수로 표현된 각문자는 대문자로만 표현하며, 16진수의 값이 10보다 작을 경우 앞에 0을 붙인다.(무조건 2글자로 표현한다.)
*/


#include <string>
#include<iostream>
using namespace std;

int mpow(int a, int b) {
    
    int ret = 1;
    for (int i = 0; i < b; ++i)
        ret *= a;

    return ret;
}

string encoder(string message){
	string result="";
	string realresult="";
    for(int i = 0; i <message.size();i++){
		
		int num = message[i];
		
		if(num>=97 && num<=122)
			num -= 97;
		else if(num>=65 && num<=90)
			num -=39;
		else if(num>=48 && num<=57) 
			num +=4;
		else 
			num = 62;

		//cout << num<<endl;

		//한개씩 처리
		string ans="";
		int zerocnt = 6;
		while(num>0){
			if( num%2==0) ans = "0"+ans;
			else ans = "1"+ans;
			num = num/2;
			zerocnt--;
		}
		while(zerocnt>0){
			ans= "0"+ ans;
			zerocnt--;
		}
		result = result+ans;
		//cout << ans<<endl;
	}
	int zcnt =8- (result.size()%8);
	for(int i = 0; i <zcnt; i++)result= result+"0";
	
	//변환
	int i = 0;
	while(i < result.size()){
		int eit = 3;
		int nownum = 0;
		while(eit>=0){	
			if(result[i]==49){//1
				nownum += mpow(2,eit);
			}
			eit--;
			i++;
		}
		
		char rr = nownum+48;
		if(nownum<10)realresult=realresult+rr;
		else {
			nownum -=10;
			char sd = nownum+65;
			realresult=realresult+sd;
		}
	}

	
	return realresult;
}
int main(){
	cout << encoder("a bAB01");
}
